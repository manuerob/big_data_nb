(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    251712,       4817]
NotebookOptionsPosition[    250087,       4782]
NotebookOutlinePosition[    250554,       4800]
CellTagsIndexPosition[    250511,       4797]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rawData", " ", "=", " ", 
    RowBox[{"ResourceData", "[", 
     RowBox[{
     "ResourceObject", "[", 
      "\"\<Air Pollution and Mortality in the United States\>\"", "]"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"First", "[", 
  RowBox[{"Keys", "[", "rawData", "]"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.876209945897378*^9, {3.8762146726312513`*^9, 
   3.8762146748392773`*^9}},ExpressionUUID->"e1c50665-a3cd-4e7b-84c4-\
489c5bb73e88"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {
      "FIPS", "Name", "County", "BaseMortalityAgeAdjustedRate", 
       "BaseMortalityCrudeRate", "BaseMortalityDeaths", 
       "BaseMortalityPercentageOfTotalDeaths", "BaseMortalityPopulation", 
       "MeanBMI", "MedianHouseholdIncome", "MedianHouseValue", 
       "PercentageBelowPovertyLevel", "PercentageEducationBelowHighSchool", 
       "PercentageEthnicityAfroAmerican", "PercentageEthnicityAsian", 
       "PercentageEthnicityCaucasian", "PercentageEthnicityHispanic", 
       "PercentageEthnicityNativeAmerican", "PercentageEverSmokers", 
       "PercentageOwnerOccupiedHousing", "PM2.5", "Polygon", "Population", 
       "PopulationDensity", "SummerAverageDailyRelativeHumidity", 
       "SummerAverageDailyTempeature", "WinterAverageDailyRelativeHumidity", 
       "WinterAverageDailyTemperature"}, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MulticolumnShape[7, 4, 28, 380.8], 28, 4, {
       All}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Atom[String], 28], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MulticolumnShape[7, 4, 28, 380.8], 28, 4, {
       All}], "Type" -> TypeSystem`Vector[
       TypeSystem`Atom[String], 28], "Path" -> {}, "DisplayedRowCount" -> 7, 
     "DisplayedColumnCount" -> 4, "DataRowCount" -> 7, "DataColumnCount" -> 4,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation["FIPS", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["Name", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["County", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["BaseMortalityAgeAdjustedRate", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["BaseMortalityCrudeRate", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["BaseMortalityDeaths", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["BaseMortalityPercentageOfTotalDeaths", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["BaseMortalityPopulation", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["MeanBMI", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["MedianHouseholdIncome", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["MedianHouseValue", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["PercentageBelowPovertyLevel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["PercentageEducationBelowHighSchool", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["PercentageEthnicityAfroAmerican", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["PercentageEthnicityAsian", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["PercentageEthnicityCaucasian", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["PercentageEthnicityHispanic", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["PercentageEthnicityNativeAmerican", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["PercentageEverSmokers", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["PercentageOwnerOccupiedHousing", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["PM2.5", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{21}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["Polygon", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{22}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["Population", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{23}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["PopulationDensity", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{24}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["SummerAverageDailyRelativeHumidity", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{25}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["SummerAverageDailyTempeature", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{26}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["WinterAverageDailyRelativeHumidity", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{27}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["WinterAverageDailyTemperature", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{28}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[
               TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1553., {95.9206298828125, 101.0793701171875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1553., {95.9206298828125, 101.0793701171875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8762099888598204`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"5916a4f3-6073-4582-8924-f4a0afc06f94"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"noEmpty", " ", "=", " ", 
   RowBox[{"DeleteMissing", "[", 
    RowBox[{"rawData", ",", " ", "1", ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"noUnits1", " ", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{"QuantityMagnitude", ",", "noEmpty", ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", " ", 
       RowBox[{"4", ";;", "21"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"noUnits", " ", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{"QuantityMagnitude", ",", "noUnits1", ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", " ", 
       RowBox[{"23", ";;", "28"}]}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8762099711598473`*^9, 3.876210009616082*^9}, {
  3.8762101905419064`*^9, 3.876210207055135*^9}, {3.8762136569889946`*^9, 
  3.8762136581298475`*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"142d4812-f349-4f88-baf7-a0adabc1c296"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "noUnits", "]"}]], "Input",
 CellChangeTimes->{{3.876210214196628*^9, 3.876210228457263*^9}, 
   3.8762136549755125`*^9, {3.8762148458433657`*^9, 3.876214856166088*^9}},
 CellLabel->
  "In[216]:=",ExpressionUUID->"af998522-1911-4329-8b3b-2ba96d533537"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2399", ",", "28"}], "}"}]], "Output",
 CellChangeTimes->{3.8762148571403685`*^9},
 CellLabel->
  "Out[216]=",ExpressionUUID->"20423250-8146-4d33-97e4-eeda4169bfdc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rawData", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8762146864397974`*^9, 3.8762146908200283`*^9}},
 CellLabel->
  "In[215]:=",ExpressionUUID->"d11a8249-e100-444f-b78c-9f4e9d69f0e8"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "FIPS" -> "01001", "Name" -> "Autauga County, AL", "County" -> 
       Entity["AdministrativeDivision", {
         "AutaugaCounty", "Alabama", "UnitedStates"}], 
       "BaseMortalityAgeAdjustedRate" -> 958.8, "BaseMortalityCrudeRate" -> 
       859.3, "BaseMortalityDeaths" -> Quantity[7893, "People"], 
       "BaseMortalityPercentageOfTotalDeaths" -> Quantity[0., "Percent"], 
       "BaseMortalityPopulation" -> Quantity[918492, "People"], "MeanBMI" -> 
       TemporalData[TimeSeries, {{
           QuantityArray[
            
            StructuredArray`StructuredData[{
             6}, {{27.5158181818182, 28.7218, 28.1174545454545, 
              27.6330357142857, 27.6789285714286, 28.7095061728395}, 
              "Kilograms" "Meters"^(-2), {{1}}}]]}, {
           
           TemporalData`DateSpecification[{2007, 1, 1, 0, 0, 0.}, {
            2012, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
          "Discrete", 1}, 1, {
          ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
           ValueDimensions -> 1}}, True, 12.1], "MedianHouseholdIncome" -> 
       TemporalData[TimeSeries, {{
           QuantityArray[
            
            StructuredArray`StructuredData[{
             18}, {{34719.8780589835, 34713, 34740.4720133667, 
               34822.2491694352, 35140.0649350649, 36278.9047619047, 
               39410.7142857143, 44805.4285714286, 48169.5714285714, 
               48169.5714285714, 47752.2040816327, 47497.019047619, 
               48806.1428571429, 46896.4285714286, 45248, 43924.4285714286, 
               43174.7142857143, 47322}, "USDollars", {{1}}}]]}, {
           
           TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
            2016, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
          "Discrete", 1}, 1, {
          ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
           ValueDimensions -> 1}}, True, 12.1], "MedianHouseValue" -> 
       TemporalData[TimeSeries, {{
           QuantityArray[
            
            StructuredArray`StructuredData[{
             18}, {{68501.2061632852, 68485.7142857143, 68547.5912002228, 
              68731.7829457365, 69447.619047619, 72012.6984126984, 
              79066.6666666667, 92389.2857142857, 100357.142857143, 
              100357.142857143, 100073.469387755, 99840.0000000001, 
              100228.571428571, 100614.285714286, 98371.4285714286, 
              96571.4285714286, 107414.285714286, 107975.238095238}, 
              "USDollars", {{1}}}]]}, {
           
           TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
            2016, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
          "Discrete", 1}, 1, {
          ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
           ValueDimensions -> 1}}, True, 12.1], "PercentageBelowPovertyLevel" -> 
       TemporalData[TimeSeries, {{
           QuantityArray[
            
            StructuredArray`StructuredData[{
             18}, {{21.439731061489802`, 21.443850717007802`, 
              21.4273961864888, 21.3784152584323, 21.1880575607583, 
              20.505942477426302`, 18.6301259982632, 14.2949087358862, 
              11.9119280755123, 11.9119280755123, 11.1416888440764, 
              10.8179188802146, 13.002676560774102`, 9.73043110498875, 
              6.52025345546126, 6.285139386149299, 4.53290539777523, 
              5.153363929988361}, "People", {{1}}}]]}, {
           
           TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
            2016, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
          "Discrete", 1}, 1, {
          ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
           ValueDimensions -> 1}}, True, 12.1], 
       "PercentageEducationBelowHighSchool" -> TemporalData[TimeSeries, {{
           QuantityArray[
            
            StructuredArray`StructuredData[{
             18}, {{47.227198250549, 47.233718762601, 47.2076748460423, 
              47.1301487688441, 46.8288542415512, 45.749215518751804`, 
              42.780209031053204`, 35.989701069021, 32.241695171161, 
              32.241695171161, 32.2465614392959, 32.2309400243358, 
              33.8731895679575, 28.978706377567896`, 32.2757590481056, 
              32.0122402148934, 33.0412719940918, 27.152639632013596`}, 
              "Percent", {{1}}}]]}, {
           
           TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
            2016, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
          "Discrete", 1}, 1, {
          ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
           ValueDimensions -> 1}}, True, 12.1], 
       "PercentageEthnicityAfroAmerican" -> TemporalData[TimeSeries, {{
           QuantityArray[
            
            StructuredArray`StructuredData[{
             18}, {{26.2328316456081, 26.233510981860903`, 26.2307976095763, 
              26.2227205944034, 26.1913303763451, 26.0788487616362, 
              25.7695243211868, 25.069370058281898`, 24.6813230837556, 
              24.6813230837556, 24.8809084298782, 25.000051840888897`, 
              24.8415509998387, 24.360867251589298`, 26.0784205066139, 
              26.668059595039, 26.565102065968798`, 25.552805220019398`}, 
              "Percent", {{1}}}]]}, {
           
           TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
            2016, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
          "Discrete", 1}, 1, {
          ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
           ValueDimensions -> 1}}, True, 12.1], "PercentageEthnicityAsian" -> 
       TemporalData[TimeSeries, {{
           QuantityArray[
            
            StructuredArray`StructuredData[{
             18}, {{0.27436448425493304`, 0.274331275025799, 
              0.27446391773631795`, 0.27485876115368, 0.27639326625297, 
              0.28189190952542903`, 0.29701317852469, 0.338704416054067, 
              0.360162129730157, 0.360162129730157, 0.375456780776065, 
              0.379518511278961, 0.34237698552247303`, 0.395732418145523, 
              0.467224687051519, 0.43638273831951696`, 0.42918007538105096`, 
              0.411113807219793}, "People", {{1}}}]]}, {
           
           TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
            2016, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
          "Discrete", 1}, 1, {
          ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
           ValueDimensions -> 1}}, True, 12.1], 
       "PercentageEthnicityCaucasian" -> TemporalData[TimeSeries, {{
           QuantityArray[
            
            StructuredArray`StructuredData[{
             18}, {{71.8762104126159, 71.87606713525369, 71.8766394068231, 
              71.87834291289, 71.88496335692291, 71.90868661470729, 
              71.9739255736145, 72.4985491536976, 72.7060431598456, 
              72.7060431598456, 72.53458477977959, 72.4359658344698, 
              72.1696424503359, 73.7788445788651, 71.5058344993837, 
              71.0553006001323, 70.9644680747739, 71.43417662737231}, 
              "Percent", {{1}}}]]}, {
           
           TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
            2016, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
          "Discrete", 1}, 1, {
          ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
           ValueDimensions -> 1}}, True, 12.1], "PercentageEthnicityHispanic" -> 
       TemporalData[TimeSeries, {{
           QuantityArray[
            
            StructuredArray`StructuredData[{
             18}, {{1.37284792529982, 1.37254860302365, 1.37374414170568, 
              1.37730295452661, 1.39113379526252, 1.4406943078995, 
              1.5769857176512299`, 1.6535081676868, 1.7471613559078498`, 
              1.7471613559078498`, 1.7326337638435803`, 1.73382069321097, 
              1.9858599469064, 1.2697641739107601`, 1.6454682114579702`, 
              1.7504377043544102`, 1.8702443675310603`, 1.8139816222599798`}, 
              "Percent", {{1}}}]]}, {
           
           TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
            2016, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
          "Discrete", 1}, 1, {
          ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
           ValueDimensions -> 1}}, True, 12.1], 
       "PercentageEthnicityNativeAmerican" -> TemporalData[TimeSeries, {{
           QuantityArray[
            
            StructuredArray`StructuredData[{
             18}, {{0.433172991808991, 0.43335140241643105`, 
              0.43263880332355903`, 0.43051757811687197`, 0.422273725609064, 
              0.39273325412275395`, 0.311496957535401, 0.16970415493441401`, 
              0.08182173910707499, 0.08182173910707499, 0.0841547589763406, 
              0.0910992638727287, 0.0677880677733423, 0.109889081774541, 
              0.0981528781919323, 0.188322332422164, 0.223882712872688, 
              0.23530979295876103`}, "Percent", {{1}}}]]}, {
           
           TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
            2016, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
          "Discrete", 1}, 1, {
          ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
           ValueDimensions -> 1}}, True, 12.1], "PercentageEverSmokers" -> 
       TemporalData[TimeSeries, {{
           QuantityArray[
            
            StructuredArray`StructuredData[{
             6}, {{58.928571428571395`, 40., 40., 40.322580645161295`, 
              52.3255813953488, 43.9024390243902}, "Percent", {{1}}}]]}, {
           
           TemporalData`DateSpecification[{2007, 1, 1, 0, 0, 0.}, {
            2012, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
          "Discrete", 1}, 1, {
          ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
           ValueDimensions -> 1}}, True, 12.1], 
       "PercentageOwnerOccupiedHousing" -> TemporalData[TimeSeries, {{
           QuantityArray[
            
            StructuredArray`StructuredData[{
             18}, {{82.9245898926274, 82.9251226153236, 82.9229948398761, 
              82.9166609966836, 82.89204537882159, 82.80383941481641, 
              82.561273013802, 82.29009345396831, 82.0784170668498, 
              82.0784170668498, 81.9188327718947, 81.769630311132, 
              81.83357381075879, 82.5681035790319, 80.9613270021639, 
              79.6807958604543, 77.7512269140429, 77.0523229976901}, 
              "Percent", {{1}}}]]}, {
           
           TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
            2016, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
          "Discrete", 1}, 1, {
          ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
           ValueDimensions -> 1}}, True, 12.1], "PM2.5" -> 
       TemporalData[TimeSeries, {{
           QuantityArray[
            
            StructuredArray`StructuredData[{
             17}, {{16.4981057874953, 13.1862741491695, 12.8421599397512, 
              13.9397778723274, 13.1805228773249, 13.9999151321764, 
              13.4871320464019, 13.9140794193788, 11.2827513908829, 
              10.5960952036143, 11.3543075761806, 10.4111062040972, 
              9.62666012156555, 8.63678423622253, 8.97816158614132, 
              8.63211752237154, 8.54802883997344}, "Meters"^(-3) 
              "Micrograms", {{1}}}]]}, {
           
           TemporalData`DateSpecification[{2000, 1, 1, 0, 0, 0.}, {
            2016, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
          "Discrete", 1}, 1, {
          ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
           ValueDimensions -> 1}}, True, 12.1], "Polygon" -> Polygon[
         GeoPosition[CompressedData["
1:eJxM3Xc81e/7B3D5CKVlNEiiiZCkJeNYWSWZRUaiYVRKIXskMopoyJYZkr1H
g1JCFE1N0TDSkIbf6zq/833k+8/n8fye47zX/b7HdV/3nZjtQUN7djY2NnNu
Njb6739Xz21crclg+OpIGt2rMKlv3r/1zga4atfTVPLMTZ/4GfCMavMBMrv/
/ctb4Df1V97dh4fjzI6awrw3Zux+AAdP0su3hS3UlPsew0f0roi5wOV3fZ73
w2mi7l6esI72ZeffcJm7e6s/HMepOcJWaVIfNnvNhWB4ZiufHQfcLB+3Mxxe
9vzc7cmww+icRxGw0MrnSzhhbuNx0WhY+aOQNBcsvuyg30X492w5M/p8y5aA
dZfhHtl2Ufp762WnzlTCe6QnX/6D4wcIGhU0wnIKolN+wW1De6a/gD9GmO8a
g2X3lq74Cr+49cuFPj8m+Ldj+iYGQ8q7L4A+T3S/P2cWnDi1/P1POO7480Wy
8C6j99uG4YiSuiIlOGrpEalBeIPGs3hdeJ97ESe59mm1iyEs1hud8xmeZHAr
wgIed9M48YHO743cAQfYed7khjfwdxtDLy/4VOOTHrq//OffzA6BDebU1j6C
h8bu7UiCNfStW7vgYnZ10zJ40CVjylP44vIugdsw8zphfRuFvKfwJbYbX97D
lr/Yj7+Cre87mfXBNcZO9z7Cav08YvS5uXZ93xc4epFc7mu4yNqtcgQeHukJ
pOOtmaqz5xv8ufyVWwdcPlnv6CQtPB/Gj3dUfjz+u+fFBR/kC6xvhru+JicL
wIeOzx1sgvnqbKfPhftG97k0wr2n9zsLwVlhAs3XYfu1t5cshp0+Zo7nwn+S
ZQzF4aSInevS6Xpw2VLw6VPjG1PhcN0PHPJwx0regwnwqmKFDer0+cnaqlg4
J2GXgx5cGc836yy8Wf/zNCO4u6TmeTT8MfuhmRnsG7SrnlwiX6a2HT7fuLKa
3K+qKmEOF99ao0x/f/er3k0LeFWL61XyIwWXDVawu4eCWQxsMlsoxB4eUOW+
fR6efYVz1wH4d1bwn0S44uW0vz4w218JEzr/Fel7j4fCkrciG1PgHS9MZl6A
qz6rHaHrYU/QuZQDB41k76br2ShsmV4FTwnRKT8DPy8J8mqDjx4Ofh1Jz493
Tft7eFbebGfyj/UdQZ/hlzM6JU7DIbqL93yHI/sSj0bQ8eaWtbNpMxiTt+jl
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
/YZtJzwyyf8++fE13pAuuPbr9/epcLJT8+wX8Noj2g7095+XjWb0kyM+lyTD
9RaiqsMwtxkjJREW2Ch0cgxedujjAfKvY3y8f2Guxd+n0Pd36E3aPw7zWH2d
TcfzrGuPnG+I/vwBmb+l8III9T8y8K4e/UXXYXfLOpt1MPM9hw07L3pqwze5
8YSp/nJ4bG4N7+3grW+Ba3U6kvfBgsJLr96HF92MLXKDqZmmz7WMlC76wqOz
HctvU3ng0xIJgedd28p2C/5o/DMxCq6cdUWFjt/bN+x5CbaVVp5cDxtnP/4v
D8Zo8Dh5khMjqBxO0Bw0Jvu8ML58HT6eZnqhFjZrK77ZDKNXeaES1g4WtmiF
UeuXlcBffxi6t8HWi3Vm5dP1pCksuA17NDtU0v37mrFodiNcf2TwVTS9H8qR
vfS52wz7rFNUPwnHyHbA57YLRnhR/V2l8e0RHT+TfcCD6m8pT75uut45jyLc
4LoOu8an8NfMiA+uVN6slxS/g3166jxcqD2ZHa77AdZJ/PiLyjd//BjjC+zO
jRJdyYovwZLbvp87DPur/P79A+b5YNFLv6fHkeM7ywjjn5mciVSe5aIeOInA
9usTW/3grBdC3ZKwaaeNUDD81Cn3piK8emu+xBlqr6qPiKvDG39+7T4H2+1A
zQjrbLp/ne5H9n70pOA92rNvXYGNVA5KGsLzdT9rFlP5R3NiDR+WvcR2g8qb
Q03PPlji/jatJviure2ICywex1VAz1/iP65iVzjp7YxL5FNnKhO8YXntBiNy
8PY/vMGwUWxpOZW3DQxZrdPwdsMBZfq9+bPE8uNht4qQQSqfnvtPsWXCgwvW
LCOf8LR/kQPH3yh5QuczuRYtNbzCQXY6uXvZ7IgS+ECDoSWVn0X1/ZbVcJT3
GfsG+Mnvug+34bHzl+WofL5WPuz4AN7tc2BfM7UnaAYewsbyj/5SedfYlrz1
LexUcCi6l94fK8m1vbCjrf/VPlik58WaPnjkzqlXH+Awoc03huDvH96kDMIV
Rgrbx+EBN/GpX2HRBwetuYwZjB1jbZO/wfM8dvDzwM3Ov0TIJ53D5ObDVmXc
4eSwHgFTSXjlFt6X9Pcr6t0urYO5FWX9hmD9c+aD5GUmGInCNtQQwYVfU3jo
fILzHjfrwRWr+ae9h3k8ONYZwsx+Nnxd1uaOCXxiWehSslX1wjJr+FzU8a3k
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
tBK8p7JLxxv2TXJ5xYAVRw53kxsix9lV4TNbviz2gXcFN/KTadvqbBiVQKkO
bHhpfQWNB5xELZ3M4ZjRZ1O+r2Ktv4Zn+rxmG6P53y+qrXvgipNBg3+ovxu4
L28f7L545PZC9K+rm59kuNP+X7TvNsyMO8GUZkjjKWY/GD516Ow26v/z00Zs
8NOxfhVH+LpOnEoG7PKnSvkIzAz/wc1/ZmhSPEDwdtHdshLWekT42v70Wbfh
lwGoGWFazt8GPxlnc3wIX23jutsNNzR+GxyDaZqvH34mZSU1DeNLbvoHUmj/
MPtnnTS+V6WEjVKT+n6r5d/s4Y6Aud6TYdqGjNZ3WPMcPzgNtj9Qy0vztZci
2Q7MKWXVH/IYn667nroIVs/b/8JFnpVvDzP3MYI/7T9Zt6yUlU8O14yf5id3
BZ9y+QvvCSrjEoPvFf9ZsWINaz4UFqQOGfwn4XM7OeUER7gMTNsp0v5tzP3o
4Z8r7PLp/ChN05bWi41PDqDr4aSAMrzLOTxhCNf75/FpgSj4mlPvmU649nm0
cAE8jRr8EtZ8Bex03MDgFMzcFxNOQDf+JBzwjlvwNuxP/9BACWv9A/x6YelX
Kg9PBDNKO9ew9teGIwuyQjrgSqllaxfCtJvtI9iCi8uTn8onbcwLswml643j
fUnb8Vj57RrWfpP0vm8pN+uF93z3CP9C+6vRBh5w8asC+SGYue8ePLez7F4/
vPXIl0X8a1nzt3CQn9eU2fDaScHvWqk+nOX2TRIe8x7vvQU3zv08rAbTP9tE
7zNzXzp4ler0nuvw7ak+823hNwc9A27CNB1M6xNROvY3wvfn9XI4w3b3LPVu
U31EFQn8S3ih9H3qP6BbSush4/eZib2j+p4qTviGl8ek79S/O5rj1bqW9e8L
4H4siBo0/LCWVR/DtG30AMzQ8Z8sCwtRgab1jvO9dsnB/9fUncflnL1vABdN
iGRt0RBCopCimmivqSlhJEtmFMmuSHZpkEhjjRGlEn1LDG2eQoslWxFZSmRE
SiFZoiH8ruv8jtfw3/vl6VnPZzufc9/XoKYFm17DU48mnTWFd3FhgRn2f1Yq
g9xhF1ccaWBH76P+3vDB6dF5bWF1NgqGnTX3e6rCwyY/WMvt3Tdy1u8dYC5D
DsiU62/M5PUUt1/uuGG2BVoHi7oU+FOvwnWb4YmtIjd2N5N5PnB73U7j+5jJ
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
i+sY+P8Ae+Btzg==
          "]]], "Population" -> TemporalData[TimeSeries, {{
           QuantityArray[
            
            StructuredArray`StructuredData[{
             18}, {{65034.9492435334, 65028, 65055.7563352826, 
               65138.3798449612, 65459.4848484849, 66610.1111111111, 
               69774.3333333333, 76020.25, 79684.3333333333, 79684.3333333333,
                79720, 79872.0000000001, 79267, 80519, 79934, 82000, 81114, 
               81723}, "People", {{1}}}]]}, {
           
           TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
            2016, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
          "Discrete", 1}, 1, {
          ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
           ValueDimensions -> 1}}, True, 12.1], "PopulationDensity" -> 
       TemporalData[TimeSeries, {{
           QuantityArray[
            
            StructuredArray`StructuredData[{
             18}, {{135.715504588301, 135.697715714286, 135.768767181844, 
              135.980269224806, 136.802243073593, 139.747649365079, 
              147.847516666667, 163.90567, 173.308321428572, 173.308321428572,
               174.306606938776, 174.880476952381, 172.147118571429, 
              175.630727142857, 180.29632, 182.914657142857, 184.160308571429,
               189.049232857143}, "Miles"^(-2) "People", {{1}}}]]}, {
           
           TemporalData`DateSpecification[{1999, 1, 1, 0, 0, 0.}, {
            2016, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
          "Discrete", 1}, 1, {
          ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
           ValueDimensions -> 1}}, True, 12.1], 
       "SummerAverageDailyRelativeHumidity" -> 
       TemporalData[
        TimeSeries, {{{95.0567718839513, 99.0431823038519, 97.7268097496056, 
          98.8729653195416, 97.2786447701786, 97.951487649728, 
          92.0588956604347, 95.8159690044278, 96.2498122768351, 
          96.389087276436, 95.9308435503733, 90.7048136588755, 
          95.6276073974168, 98.8444418827886, 91.0394696377146, 
          96.8897595884123, 97.4615354445719}}, {
           
           TemporalData`DateSpecification[{2000, 1, 1, 0, 0, 0.}, {
            2016, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
          "Discrete", 1}, 1, {
          ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
           ValueDimensions -> 1}}, True, 12.1], 
       "SummerAverageDailyTempeature" -> TemporalData[TimeSeries, {{
           QuantityArray[
            
            StructuredArray`StructuredData[{
             17}, {{307.273691712396, 304.385060120948, 305.201920999025, 
              303.722674596225, 304.203438409084, 304.423246148106, 
              307.088476386768, 307.346142972875, 305.655992885307, 
              304.752244873428, 307.301620431715, 309.819557525598, 
              307.760591900239, 305.447762641543, 305.249383771525, 
              305.717672736422, 307.049188538477}, "DegreesFahrenheit", {{
              1}}}]]}, {
           
           TemporalData`DateSpecification[{2000, 1, 1, 0, 0, 0.}, {
            2016, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
          "Discrete", 1}, 1, {
          ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
           ValueDimensions -> 1}}, True, 12.1], 
       "WinterAverageDailyRelativeHumidity" -> 
       TemporalData[
        TimeSeries, {{{85.639748084872, 88.8983016531746, 86.1418291613287, 
          83.9666297190017, 87.6665460223964, 84.6204717513425, 
          84.9429029258255, 79.4458809626098, 88.7795427636327, 
          81.68176865863, 85.5563214847079, 83.0855811315818, 
          88.0553100534756, 88.8805480332483, 84.9849551290592, 
          87.2418845683249, 86.4931428051334}}, {
           
           TemporalData`DateSpecification[{2000, 1, 1, 0, 0, 0.}, {
            2016, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
          "Discrete", 1}, 1, {
          ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
           ValueDimensions -> 1}}, True, 12.1], 
       "WinterAverageDailyTemperature" -> TemporalData[TimeSeries, {{
           QuantityArray[
            
            StructuredArray`StructuredData[{
             17}, {{290.079938059125, 286.548224549691, 288.728068375536, 
              286.703221097889, 286.638994423663, 288.545242790974, 
              288.427079623645, 288.397838002826, 288.430480686242, 
              288.707239873662, 284.516593230573, 286.628102798399, 
              291.09974269536, 290.558163918999, 287.158643738703, 
              286.831416301413, 289.447554676556}, "DegreesFahrenheit", {{
              1}}}]]}, {
           
           TemporalData`DateSpecification[{2000, 1, 1, 0, 0, 0.}, {
            2016, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {"Continuous", 1}, {
          "Discrete", 1}, 1, {
          ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
           ValueDimensions -> 1}}, True, 12.1]|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[380.8], 
         TypeSystem`PackageScope`UnknownShape[False]]], 20, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], TypeSystem`AnyType, 28], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[380.8], 
         TypeSystem`PackageScope`UnknownShape[False]]], 20, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], TypeSystem`AnyType, 28], "Path" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     28, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 9, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["MeanBMI", 
                  Style[
                  "MeanBMI", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "47e72677-8504-42e3-a7e4-270399230116"]][{
                    Key["MeanBMI"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "47e72677-8504-42e3-a7e4-270399230116"][{
                 Key["MeanBMI"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2007\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2012\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["6", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "47e72677-8504-42e3-a7e4-270399230116"][{
                 Key["MeanBMI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["MedianHouseholdIncome", 
                  Style[
                  "MedianHouseholdIncome", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "47e72677-8504-42e3-a7e4-270399230116"]][{
                    Key["MedianHouseholdIncome"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "47e72677-8504-42e3-a7e4-270399230116"][{
                 Key["MedianHouseholdIncome"]}, "RowHeader", False], "Mouse"],
               ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2016\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["18", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "47e72677-8504-42e3-a7e4-270399230116"][{
                 Key["MedianHouseholdIncome"]}, "Item", False], "Mouse"], 
              ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["MedianHouseValue", 
                  Style[
                  "MedianHouseValue", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "47e72677-8504-42e3-a7e4-270399230116"]][{
                    Key["MedianHouseValue"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "47e72677-8504-42e3-a7e4-270399230116"][{
                 Key["MedianHouseValue"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2016\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["18", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "47e72677-8504-42e3-a7e4-270399230116"][{
                 Key["MedianHouseValue"]}, "Item", False], "Mouse"], 
              ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PercentageBelowPovertyLevel", 
                  Style[
                  "PercentageBelowPovertyLevel", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "47e72677-8504-42e3-a7e4-270399230116"]][{
                    Key["PercentageBelowPovertyLevel"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "47e72677-8504-42e3-a7e4-270399230116"][{
                 Key["PercentageBelowPovertyLevel"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2016\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["18", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "47e72677-8504-42e3-a7e4-270399230116"][{
                 Key["PercentageBelowPovertyLevel"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PercentageEducationBelowHighSchool", 
                  Style[
                  "PercentageEducationBelowHighSchool", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "47e72677-8504-42e3-a7e4-270399230116"]][{
                    Key["PercentageEducationBelowHighSchool"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "47e72677-8504-42e3-a7e4-270399230116"][{
                 Key["PercentageEducationBelowHighSchool"]}, "RowHeader", 
                False], "Mouse"], ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2016\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["18", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "47e72677-8504-42e3-a7e4-270399230116"][{
                 Key["PercentageEducationBelowHighSchool"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PercentageEthnicityAfroAmerican", 
                  Style[
                  "PercentageEthnicityAfroAmerican", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "47e72677-8504-42e3-a7e4-270399230116"]][{
                    Key["PercentageEthnicityAfroAmerican"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "47e72677-8504-42e3-a7e4-270399230116"][{
                 Key["PercentageEthnicityAfroAmerican"]}, "RowHeader", False],
                "Mouse"], ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2016\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["18", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "47e72677-8504-42e3-a7e4-270399230116"][{
                 Key["PercentageEthnicityAfroAmerican"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PercentageEthnicityAsian", 
                  Style[
                  "PercentageEthnicityAsian", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "47e72677-8504-42e3-a7e4-270399230116"]][{
                    Key["PercentageEthnicityAsian"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "47e72677-8504-42e3-a7e4-270399230116"][{
                 Key["PercentageEthnicityAsian"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2016\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["18", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "47e72677-8504-42e3-a7e4-270399230116"][{
                 Key["PercentageEthnicityAsian"]}, "Item", False], "Mouse"], 
              ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PercentageEthnicityCaucasian", 
                  Style[
                  "PercentageEthnicityCaucasian", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "47e72677-8504-42e3-a7e4-270399230116"]][{
                    Key["PercentageEthnicityCaucasian"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "47e72677-8504-42e3-a7e4-270399230116"][{
                 Key["PercentageEthnicityCaucasian"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2016\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["18", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "47e72677-8504-42e3-a7e4-270399230116"][{
                 Key["PercentageEthnicityCaucasian"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PercentageEthnicityHispanic", 
                  Style[
                  "PercentageEthnicityHispanic", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "47e72677-8504-42e3-a7e4-270399230116"]][{
                    Key["PercentageEthnicityHispanic"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "47e72677-8504-42e3-a7e4-270399230116"][{
                 Key["PercentageEthnicityHispanic"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2016\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["18", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "47e72677-8504-42e3-a7e4-270399230116"][{
                 Key["PercentageEthnicityHispanic"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PercentageEthnicityNativeAmerican", 
                  Style[
                  "PercentageEthnicityNativeAmerican", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "47e72677-8504-42e3-a7e4-270399230116"]][{
                    Key["PercentageEthnicityNativeAmerican"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "47e72677-8504-42e3-a7e4-270399230116"][{
                 Key["PercentageEthnicityNativeAmerican"]}, "RowHeader", 
                False], "Mouse"], ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2016\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["18", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "47e72677-8504-42e3-a7e4-270399230116"][{
                 Key["PercentageEthnicityNativeAmerican"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PercentageEverSmokers", 
                  Style[
                  "PercentageEverSmokers", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "47e72677-8504-42e3-a7e4-270399230116"]][{
                    Key["PercentageEverSmokers"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "47e72677-8504-42e3-a7e4-270399230116"][{
                 Key["PercentageEverSmokers"]}, "RowHeader", False], "Mouse"],
               ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2007\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2012\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["6", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "47e72677-8504-42e3-a7e4-270399230116"][{
                 Key["PercentageEverSmokers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PercentageOwnerOccupiedHousing", 
                  Style[
                  "PercentageOwnerOccupiedHousing", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "47e72677-8504-42e3-a7e4-270399230116"]][{
                    Key["PercentageOwnerOccupiedHousing"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "47e72677-8504-42e3-a7e4-270399230116"][{
                 Key["PercentageOwnerOccupiedHousing"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2016\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["18", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "47e72677-8504-42e3-a7e4-270399230116"][{
                 Key["PercentageOwnerOccupiedHousing"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PM2.5", 
                  Style[
                  "PM2.5", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "47e72677-8504-42e3-a7e4-270399230116"]][{
                    Key["PM2.5"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "47e72677-8504-42e3-a7e4-270399230116"][{
                 Key["PM2.5"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2000\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2016\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["17", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "47e72677-8504-42e3-a7e4-270399230116"][{
                 Key["PM2.5"]}, "Item", False], "Mouse"], 
              ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Polygon", 
                  Style[
                  "Polygon", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "47e72677-8504-42e3-a7e4-270399230116"]][{
                    Key["Polygon"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "47e72677-8504-42e3-a7e4-270399230116"][{
                 Key["Polygon"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style["\[Ellipsis]", 
                   GrayLevel[0.5]], 
                  Style[
                   Style["\[Ellipsis]", 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "47e72677-8504-42e3-a7e4-270399230116"]][{
                    Key["Polygon"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "47e72677-8504-42e3-a7e4-270399230116"][{
                 Key["Polygon"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5], Bold}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Population", 
                  Style[
                  "Population", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "47e72677-8504-42e3-a7e4-270399230116"]][{
                    Key["Population"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "47e72677-8504-42e3-a7e4-270399230116"][{
                 Key["Population"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2016\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["18", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "47e72677-8504-42e3-a7e4-270399230116"][{
                 Key["Population"]}, "Item", False], "Mouse"], 
              ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PopulationDensity", 
                  Style[
                  "PopulationDensity", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "47e72677-8504-42e3-a7e4-270399230116"]][{
                    Key["PopulationDensity"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "47e72677-8504-42e3-a7e4-270399230116"][{
                 Key["PopulationDensity"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1999\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2016\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["18", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "47e72677-8504-42e3-a7e4-270399230116"][{
                 Key["PopulationDensity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SummerAverageDailyRelativeHumidity", 
                  Style[
                  "SummerAverageDailyRelativeHumidity", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "47e72677-8504-42e3-a7e4-270399230116"]][{
                    Key["SummerAverageDailyRelativeHumidity"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "47e72677-8504-42e3-a7e4-270399230116"][{
                 Key["SummerAverageDailyRelativeHumidity"]}, "RowHeader", 
                False], "Mouse"], ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2000\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2016\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["17", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "47e72677-8504-42e3-a7e4-270399230116"][{
                 Key["SummerAverageDailyRelativeHumidity"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SummerAverageDailyTempeature", 
                  Style[
                  "SummerAverageDailyTempeature", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "47e72677-8504-42e3-a7e4-270399230116"]][{
                    Key["SummerAverageDailyTempeature"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "47e72677-8504-42e3-a7e4-270399230116"][{
                 Key["SummerAverageDailyTempeature"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2000\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2016\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["17", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "47e72677-8504-42e3-a7e4-270399230116"][{
                 Key["SummerAverageDailyTempeature"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["WinterAverageDailyRelativeHumidity", 
                  Style[
                  "WinterAverageDailyRelativeHumidity", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "47e72677-8504-42e3-a7e4-270399230116"]][{
                    Key["WinterAverageDailyRelativeHumidity"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "47e72677-8504-42e3-a7e4-270399230116"][{
                 Key["WinterAverageDailyRelativeHumidity"]}, "RowHeader", 
                False], "Mouse"], ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2000\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2016\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["17", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "47e72677-8504-42e3-a7e4-270399230116"][{
                 Key["WinterAverageDailyRelativeHumidity"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["WinterAverageDailyTemperature", 
                  Style[
                  "WinterAverageDailyTemperature", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "47e72677-8504-42e3-a7e4-270399230116"]][{
                    Key["WinterAverageDailyTemperature"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "47e72677-8504-42e3-a7e4-270399230116"][{
                 Key["WinterAverageDailyTemperature"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TagBox["TimeSeries", "SummaryHead"], "[", 
                   TemplateBox[{
                    GridBox[{{
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2000\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2016\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["17", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, "SummaryPanel"], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "47e72677-8504-42e3-a7e4-270399230116"][{
                 Key["WinterAverageDailyTemperature"]}, "Item", False], 
               "Mouse"], ImageSize -> {{160, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 28, 1], {1, 28 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "47e72677-8504-42e3-a7e4-270399230116"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 28, 1], {1, 28 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "47e72677-8504-42e3-a7e4-270399230116"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 9, "\[Dash]", 28, " of ", 
                    Style[28, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 9, "\[Dash]", 28, " of ", 
                    Style[28, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "47e72677-8504-42e3-a7e4-270399230116"}, "Rows", 1, {}]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "47e72677-8504-42e3-a7e4-270399230116"}, "Rows", 10, {}]],
                     MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "47e72677-8504-42e3-a7e4-270399230116"}, "Rows", 30, {}]],
                     MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "47e72677-8504-42e3-a7e4-270399230116"}, "Rows", 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "47e72677-8504-42e3-a7e4-270399230116"}, "Rows", 
                    100000000, {}]], MenuEvaluator -> Automatic]}], " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 28, 1], {1, 28 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "47e72677-8504-42e3-a7e4-270399230116"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 28, 1], {1, 28 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "47e72677-8504-42e3-a7e4-270399230116"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                "47e72677-8504-42e3-a7e4-270399230116", {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "47e72677-8504-42e3-a7e4-270399230116"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "47e72677-8504-42e3-a7e4-270399230116"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "47e72677-8504-42e3-a7e4-270399230116"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "47e72677-8504-42e3-a7e4-270399230116"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "47e72677-8504-42e3-a7e4-270399230116"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              "47e72677-8504-42e3-a7e4-270399230116"][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{661., {559.9206298828125, 565.0793701171875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{661., {559.9206298828125, 565.0793701171875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.876214694834794*^9},
 CellLabel->
  "Out[215]=",ExpressionUUID->"1e85abd2-f317-4eda-8013-342c62e1741e"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"numKeys", " ", "=", 
   RowBox[{
    RowBox[{"Normal", "[", 
     RowBox[{"First", "[", " ", 
      RowBox[{"Keys", "[", "rawData", "]"}], "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"4", ";;", "All"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", 
   RowBox[{"Delete", "[", 
    RowBox[{"numKeys", ",", " ", "19"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numData", " ", "=", " ", 
   RowBox[{"noUnits", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", " ", "n"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numData3", " ", "=", " ", 
    RowBox[{"Normal", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
         RowBox[{"#", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
         RowBox[{"#", "[", 
          RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
         RowBox[{"#", "[", 
          RowBox[{"[", "5", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "6", "]"}], "]"}], "[", "\"\<LastValue\>\"", "]"}], 
         ",", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "7", "]"}], "]"}], "[", "\"\<LastValue\>\"", "]"}], 
         ",", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "8", "]"}], "]"}], "[", "\"\<LastValue\>\"", "]"}], 
         ",", " ", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "9", "]"}], "]"}], "[", "\"\<LastValue\>\"", "]"}], 
         ",", " ", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "10", "]"}], "]"}], "[", "\"\<LastValue\>\"", "]"}], 
         ",", " ", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "11", "]"}], "]"}], "[", "\"\<LastValue\>\"", "]"}], 
         ",", " ", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "12", "]"}], "]"}], "[", "\"\<LastValue\>\"", "]"}], 
         ",", " ", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "13", "]"}], "]"}], "[", "\"\<LastValue\>\"", "]"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "14", "]"}], "]"}], "[", "\"\<LastValue\>\"", "]"}], 
         ",", " ", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "15", "]"}], "]"}], "[", "\"\<LastValue\>\"", "]"}], 
         ",", " ", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "16", "]"}], "]"}], "[", "\"\<LastValue\>\"", "]"}], 
         ",", " ", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "17", "]"}], "]"}], "[", "\"\<LastValue\>\"", "]"}], 
         ",", " ", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "18", "]"}], "]"}], "[", "\"\<LastValue\>\"", "]"}], 
         ",", " ", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "19", "]"}], "]"}], "[", "\"\<LastValue\>\"", "]"}], 
         ",", " ", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "20", "]"}], "]"}], "[", "\"\<LastValue\>\"", "]"}], 
         ",", " ", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "21", "]"}], "]"}], "[", "\"\<LastValue\>\"", "]"}], 
         ",", " ", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "22", "]"}], "]"}], "[", "\"\<LastValue\>\"", "]"}], 
         ",", " ", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "23", "]"}], "]"}], "[", "\"\<LastValue\>\"", "]"}], 
         ",", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "24", "]"}], "]"}], "[", "\"\<LastValue\>\"", "]"}]}],
         "}"}], "&"}], "/@", "numData"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"data", " ", "=", " ", 
    RowBox[{"Normal", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "&"}], "/@", "numData3"}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"NumericQ", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "6", "]"}], "]"}], "]"}], "&&", 
         RowBox[{"NumericQ", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "7", "]"}], "]"}], "]"}], "&&", "\[IndentingNewLine]", 
         RowBox[{"NumericQ", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "8", "]"}], "]"}], "]"}], "&&", 
         RowBox[{"NumericQ", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "9", "]"}], "]"}], "]"}], "&&", "\[IndentingNewLine]", 
         RowBox[{"NumericQ", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "10", "]"}], "]"}], "]"}], "&&", 
         RowBox[{"NumericQ", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "11", "]"}], "]"}], "]"}], "&&", 
         "\[IndentingNewLine]", 
         RowBox[{"NumericQ", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "12", "]"}], "]"}], "]"}], "&&", 
         RowBox[{"NumericQ", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "13", "]"}], "]"}], "]"}], "&&", 
         "\[IndentingNewLine]", 
         RowBox[{"NumericQ", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "14", "]"}], "]"}], "]"}], "&&", 
         RowBox[{"NumericQ", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "15", "]"}], "]"}], "]"}], "&&", 
         "\[IndentingNewLine]", 
         RowBox[{"NumericQ", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "16", "]"}], "]"}], "]"}], "&&", 
         RowBox[{"NumericQ", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "17", "]"}], "]"}], "]"}], "&&", 
         "\[IndentingNewLine]", 
         RowBox[{"NumericQ", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "18", "]"}], "]"}], "]"}], "&&", 
         RowBox[{"NumericQ", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "19", "]"}], "]"}], "]"}], "&&", 
         "\[IndentingNewLine]", 
         RowBox[{"NumericQ", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "20", "]"}], "]"}], "]"}], "&&", 
         RowBox[{"NumericQ", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "21", "]"}], "]"}], "]"}], "&&", 
         "\[IndentingNewLine]", 
         RowBox[{"NumericQ", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "22", "]"}], "]"}], "]"}], "&&", 
         RowBox[{"NumericQ", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "23", "]"}], "]"}], "]"}], "&&", 
         RowBox[{"NumericQ", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "24", "]"}], "]"}], "]"}]}], "&"}]}], "]"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8762102466375403`*^9, 3.8762102551660047`*^9}, {
   3.8762103068394327`*^9, 3.8762103079745874`*^9}, {3.8762103723553324`*^9, 
   3.87621037375181*^9}, 3.8762107074795513`*^9, {3.8762120935695033`*^9, 
   3.8762125143291206`*^9}, {3.8762135368061275`*^9, 
   3.8762136109549446`*^9}, {3.8762140760426254`*^9, 3.876214106730423*^9}, {
   3.8762142019422555`*^9, 3.876214278982366*^9}, {3.876214346540018*^9, 
   3.876214430898896*^9}, {3.8762144761467624`*^9, 3.876214660768594*^9}, {
   3.8762148628987074`*^9, 3.8762148689619904`*^9}, {3.8762149331905675`*^9, 
   3.87621514016203*^9}, {3.876215174738285*^9, 3.876215225589421*^9}, 
   3.8762152911740885`*^9, {3.8762153692115736`*^9, 3.876215412885556*^9}, {
   3.8762154606654973`*^9, 3.876215507155802*^9}, {3.8762155806810446`*^9, 
   3.8762156163359113`*^9}, {3.8762156527751207`*^9, 3.8762156638425584`*^9}},
 CellLabel->
  "In[368]:=",ExpressionUUID->"7b771b9f-6e58-4dd3-8490-fe9a6cf4e0bb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"corr", "=", 
   RowBox[{"Correlation", "[", "data", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"labels", " ", "=", " ", 
   RowBox[{"Thread", "[", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"Range", "[", "24", "]"}], ",", " ", "n"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.876210419264879*^9, 3.8762104308712907`*^9}, {
   3.876210576980794*^9, 3.87621058004768*^9}, {3.8762106600663047`*^9, 
   3.876210665961946*^9}, {3.876210716342828*^9, 3.876210722946765*^9}, {
   3.8762107624798126`*^9, 3.876210822681601*^9}, {3.876210871541921*^9, 
   3.8762109694458528`*^9}, {3.8762119864339232`*^9, 3.876212018245824*^9}, {
   3.87621253078563*^9, 3.876212531156248*^9}, {3.8762125908981276`*^9, 
   3.8762125921262093`*^9}, 3.876212792750286*^9, {3.876213192725204*^9, 
   3.876213194182875*^9}, {3.876213320534862*^9, 3.876213325690402*^9}, {
   3.8762133929693346`*^9, 3.876213479989893*^9}, {3.876213684361951*^9, 
   3.8762137251530914`*^9}, {3.8762137750862846`*^9, 
   3.8762137809481163`*^9}, {3.8762140064554977`*^9, 
   3.8762140119927483`*^9}, {3.876215518482525*^9, 3.87621554182559*^9}, {
   3.87621562617544*^9, 3.8762156266764975`*^9}, {3.876215684200588*^9, 
   3.876215689012499*^9}, {3.876215719317442*^9, 
   3.8762157198309717`*^9}},ExpressionUUID->"4cb70e2f-6ec9-4eb0-8dc5-\
460cd3675046"],

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{"corr", ",", 
   RowBox[{"ColorFunction", "->", "\"\<TemperatureMap\>\""}], ",", 
   RowBox[{"Frame", "->", "None"}], ",", 
   RowBox[{"Mesh", "->", "True"}], ",", " ", 
   RowBox[{"PlotLegends", "->", "Automatic"}], ",", 
   RowBox[{"FrameTicks", "->", 
    RowBox[{"{", 
     RowBox[{"labels", ",", " ", "labels"}], "}"}]}], ",", " ", 
   RowBox[{"ImageSize", "->", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8762125669122276`*^9, 3.8762125727227445`*^9}, {
  3.876212631657222*^9, 3.8762126382869854`*^9}, {3.8762126978262067`*^9, 
  3.8762127394614143`*^9}, {3.8762127821240673`*^9, 3.876212811374636*^9}, {
  3.8762128676474376`*^9, 3.8762128990709543`*^9}, {3.8762130079227395`*^9, 
  3.8762130288646355`*^9}, {3.876213799727685*^9, 3.8762138098492303`*^9}, {
  3.87621403425434*^9, 3.8762140346960745`*^9}, {3.8762159401862803`*^9, 
  3.876215945139126*^9}},
 CellLabel->
  "In[402]:=",ExpressionUUID->"0d4e7d77-0bf5-4190-8938-30c6a852e16a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xticks", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Range", "@", "24"}], ",", "n"}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"yticks", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Range", "@", "24"}], ",", "n"}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"yticksRotated", "=", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Rotate", "[", 
       RowBox[{"#", ",", 
        RowBox[{"Pi", "/", "2"}]}], "]"}], "&"}], ",", "yticks", ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ticks", "=", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Rotate", "[", 
       RowBox[{"#", ",", 
        RowBox[{"Pi", "/", "2"}]}], "]"}], "&"}], ",", "tickValues", ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ArrayPlot", "[", 
  RowBox[{"corr", ",", 
   RowBox[{"ColorFunction", "->", "\"\<TemperatureMap\>\""}], ",", " ", 
   RowBox[{"PlotLegends", "->", "Automatic"}], ",", 
   RowBox[{"FrameTicks", "->", 
    RowBox[{"{", 
     RowBox[{"xticks", ",", "yticksRotated"}], "}"}]}], ",", " ", 
   RowBox[{"ImageSize", "->", "Large"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.876215785320352*^9, 3.8762159126929226`*^9}, {
  3.8762159545081215`*^9, 3.8762159597720327`*^9}, {3.8762161740598373`*^9, 
  3.876216175285621*^9}, {3.8762162486923265`*^9, 3.8762162492038436`*^9}, {
  3.8762163642774315`*^9, 3.876216433368805*^9}},
 CellLabel->
  "In[432]:=",ExpressionUUID->"7569f895-9eb1-4ce2-aa95-b723dc72f1da"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[
    RasterBox[CompressedData["
1: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
FA==
     "], {{0, 0}, {24, 24}}, {0, 1}], Frame -> Automatic, 
    FrameLabel -> {None, None}, FrameTicks -> {{{{23.5, 
         FormBox["\"BaseMortalityAgeAdjustedRate\"", TraditionalForm]}, {22.5, 
         FormBox["\"BaseMortalityCrudeRate\"", TraditionalForm]}, {21.5, 
         FormBox["\"BaseMortalityDeaths\"", TraditionalForm]}, {20.5, 
         FormBox[
         "\"BaseMortalityPercentageOfTotalDeaths\"", TraditionalForm]}, {19.5, 
         FormBox["\"BaseMortalityPopulation\"", TraditionalForm]}, {18.5, 
         FormBox["\"MeanBMI\"", TraditionalForm]}, {17.5, 
         FormBox["\"MedianHouseholdIncome\"", TraditionalForm]}, {16.5, 
         FormBox["\"MedianHouseValue\"", TraditionalForm]}, {15.5, 
         FormBox["\"PercentageBelowPovertyLevel\"", TraditionalForm]}, {14.5, 
         FormBox[
         "\"PercentageEducationBelowHighSchool\"", TraditionalForm]}, {13.5, 
         FormBox["\"PercentageEthnicityAfroAmerican\"", TraditionalForm]}, {
        12.5, 
         FormBox["\"PercentageEthnicityAsian\"", TraditionalForm]}, {11.5, 
         FormBox["\"PercentageEthnicityCaucasian\"", TraditionalForm]}, {10.5, 
         FormBox["\"PercentageEthnicityHispanic\"", TraditionalForm]}, {9.5, 
         FormBox["\"PercentageEthnicityNativeAmerican\"", TraditionalForm]}, {
        8.5, 
         FormBox["\"PercentageEverSmokers\"", TraditionalForm]}, {7.5, 
         FormBox["\"PercentageOwnerOccupiedHousing\"", TraditionalForm]}, {
        6.5, 
         FormBox["\"PM2.5\"", TraditionalForm]}, {5.5, 
         FormBox["\"Population\"", TraditionalForm]}, {4.5, 
         FormBox["\"PopulationDensity\"", TraditionalForm]}, {3.5, 
         FormBox[
         "\"SummerAverageDailyRelativeHumidity\"", TraditionalForm]}, {2.5, 
         FormBox["\"SummerAverageDailyTempeature\"", TraditionalForm]}, {1.5, 
         FormBox[
         "\"WinterAverageDailyRelativeHumidity\"", TraditionalForm]}, {0.5, 
         FormBox["\"WinterAverageDailyTemperature\"", TraditionalForm]}}, 
       None}, {{{0.5, 
         FormBox[
          RotationBox[
          "\"BaseMortalityAgeAdjustedRate\"", BoxRotation -> 
           1.5707963267948966`], TraditionalForm]}, {1.5, 
         FormBox[
          RotationBox[
          "\"BaseMortalityCrudeRate\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {2.5, 
         FormBox[
          RotationBox[
          "\"BaseMortalityDeaths\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {3.5, 
         FormBox[
          RotationBox[
          "\"BaseMortalityPercentageOfTotalDeaths\"", BoxRotation -> 
           1.5707963267948966`], TraditionalForm]}, {4.5, 
         FormBox[
          RotationBox[
          "\"BaseMortalityPopulation\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {5.5, 
         FormBox[
          RotationBox["\"MeanBMI\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {6.5, 
         FormBox[
          RotationBox[
          "\"MedianHouseholdIncome\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {7.5, 
         FormBox[
          RotationBox[
          "\"MedianHouseValue\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {8.5, 
         FormBox[
          RotationBox[
          "\"PercentageBelowPovertyLevel\"", BoxRotation -> 
           1.5707963267948966`], TraditionalForm]}, {9.5, 
         FormBox[
          RotationBox[
          "\"PercentageEducationBelowHighSchool\"", BoxRotation -> 
           1.5707963267948966`], TraditionalForm]}, {10.5, 
         FormBox[
          RotationBox[
          "\"PercentageEthnicityAfroAmerican\"", BoxRotation -> 
           1.5707963267948966`], TraditionalForm]}, {11.5, 
         FormBox[
          RotationBox[
          "\"PercentageEthnicityAsian\"", BoxRotation -> 1.5707963267948966`],
           TraditionalForm]}, {12.5, 
         FormBox[
          RotationBox[
          "\"PercentageEthnicityCaucasian\"", BoxRotation -> 
           1.5707963267948966`], TraditionalForm]}, {13.5, 
         FormBox[
          RotationBox[
          "\"PercentageEthnicityHispanic\"", BoxRotation -> 
           1.5707963267948966`], TraditionalForm]}, {14.5, 
         FormBox[
          RotationBox[
          "\"PercentageEthnicityNativeAmerican\"", BoxRotation -> 
           1.5707963267948966`], TraditionalForm]}, {15.5, 
         FormBox[
          RotationBox[
          "\"PercentageEverSmokers\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {16.5, 
         FormBox[
          RotationBox[
          "\"PercentageOwnerOccupiedHousing\"", BoxRotation -> 
           1.5707963267948966`], TraditionalForm]}, {17.5, 
         FormBox[
          RotationBox["\"PM2.5\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {18.5, 
         FormBox[
          RotationBox["\"Population\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {19.5, 
         FormBox[
          RotationBox[
          "\"PopulationDensity\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {20.5, 
         FormBox[
          RotationBox[
          "\"SummerAverageDailyRelativeHumidity\"", BoxRotation -> 
           1.5707963267948966`], TraditionalForm]}, {21.5, 
         FormBox[
          RotationBox[
          "\"SummerAverageDailyTempeature\"", BoxRotation -> 
           1.5707963267948966`], TraditionalForm]}, {22.5, 
         FormBox[
          RotationBox[
          "\"WinterAverageDailyRelativeHumidity\"", BoxRotation -> 
           1.5707963267948966`], TraditionalForm]}, {23.5, 
         FormBox[
          RotationBox[
          "\"WinterAverageDailyTemperature\"", BoxRotation -> 
           1.5707963267948966`], TraditionalForm]}}, None}}, GridLinesStyle -> 
    Directive[
      GrayLevel[0.5, 0.4]], ImageSize -> Large, 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             RasterBox[CompressedData["
1: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
0Homltnptizd9AW6i9+eleQrx/8A4XvFVA==
              "], {{
                Rational[-15, 2], (-288)/GoldenRatio}, {
                Rational[15, 2], 288/GoldenRatio}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], (-288)/GoldenRatio}, {
                  Rational[-15, 2], (-288)/GoldenRatio}, {
                  Rational[-15, 2], 288/GoldenRatio}, {
                  Rational[15, 2], 288/GoldenRatio}, {
                  Rational[15, 2], (-288)/GoldenRatio}}, {{
                7.5, -177.9937887599697}, {-7.5, -177.9937887599697}, {-7.5, 
                177.9937887599697}, {7.5, 177.9937887599697}, {
                7.5, -177.9937887599697}}]]}, {
              CapForm[None], {}}, 
             StyleBox[{Antialiasing -> False, 
               StyleBox[
                
                LineBox[{{7.500000000000001, -177.99378875996976`}, {
                 7.500000000000001, 177.99378875996976`}}], {
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]]}, StripOnInput -> False], 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{7.500000000000001, -109.09296730449758`}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -109.09296730449758`}]}, {{
                    7.500000000000001, -13.397381949675138`}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -13.397381949675138`}]}, {{
                    7.500000000000001, 82.29820340514728}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    82.29820340514728}]}, {{7.500000000000001, 
                    177.99378875996976`}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    177.99378875996976`}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False], 
                   StyleBox[
                    LineBox[{{{7.500000000000001, -166.51031851739106`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -166.51031851739106`}]}, {{
                    7.500000000000001, -147.37120144642654`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -147.37120144642654`}]}, {{
                    7.500000000000001, -128.23208437546205`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -128.23208437546205`}]}, {{
                    7.500000000000001, -89.95385023353309}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -89.95385023353309}]}, {{
                    7.500000000000001, -70.8147331625686}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -70.8147331625686}]}, {{
                    7.500000000000001, -51.67561609160411}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -51.67561609160411}]}, {{
                    7.500000000000001, -32.53649902063963}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -32.53649902063963}]}, {{
                    7.500000000000001, 5.741735121289358}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    5.741735121289358}]}, {{7.500000000000001, 
                    24.880852192253855`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    24.880852192253855`}]}, {{7.500000000000001, 
                    44.01996926321832}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    44.01996926321832}]}, {{7.500000000000001, 
                    63.15908633418282}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    63.15908633418282}]}, {{7.500000000000001, 
                    101.43732047611178`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    101.43732047611178`}]}, {{7.500000000000001, 
                    120.57643754707627`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    120.57643754707627`}]}, {{7.500000000000001, 
                    139.71555461804076`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    139.71555461804076`}]}, {{7.500000000000001, 
                    158.85467168900524`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    158.85467168900524`}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}, StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"-0.5\"", ShowStringCharacters -> False], -0.5,
                     AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -109.09296730449758`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -13.397381949675138`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.5\"", ShowStringCharacters -> False], 0.5, 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, 82.29820340514728}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"1.0\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    177.99378875996976`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], {"GraphicsLabel"}, 
                   StripOnInput -> False]}, {"GraphicsTicks"}, StripOnInput -> 
                 False], {{
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4]], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4], 
                   Opacity[0.3]]}}, StripOnInput -> False]}, {"GraphicsAxes"},
               StripOnInput -> False]}, PlotRangePadding -> Scaled[0.02], 
            PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], ImageSize -> 
            NCache[{Automatic, 576/GoldenRatio}, {
              Automatic, 355.9875775199394}], BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"TemperatureMap\"", ",", "#1"}], "]"}], "&"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "0.8629150020136404`"}], ",", 
                   "1.0000000000000002`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", 
             FractionBox["576", "GoldenRatio"]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8762158326002736`*^9, 3.8762158486841383`*^9}, {
   3.8762158948814716`*^9, 3.8762159012605486`*^9}, 3.8762159610182033`*^9, 
   3.8762160764250727`*^9, 3.8762162502187276`*^9, 3.8762163650819073`*^9, 
   3.8762164367158794`*^9},
 CellLabel->
  "Out[436]=",ExpressionUUID->"39032b3e-c7ae-467a-af4d-840253f7a01d"]
}, Open  ]]
},
WindowSize->{1152., 579.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
Magnification:>0.9 Inherited,
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"a7bd3d80-f007-47c7-894b-07b9c3530087"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 533, 14, 60, "Input",ExpressionUUID->"e1c50665-a3cd-4e7b-84c4-489c5bb73e88"],
Cell[1116, 38, 39844, 743, 214, "Output",ExpressionUUID->"5916a4f3-6073-4582-8924-f4a0afc06f94"]
}, Open  ]],
Cell[40975, 784, 964, 25, 60, "Input",ExpressionUUID->"142d4812-f349-4f88-baf7-a0adabc1c296"],
Cell[CellGroupData[{
Cell[41964, 813, 294, 5, 25, "Input",ExpressionUUID->"af998522-1911-4329-8b3b-2ba96d533537"],
Cell[42261, 820, 204, 5, 28, "Output",ExpressionUUID->"20423250-8146-4d33-97e4-eeda4169bfdc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42502, 830, 236, 5, 25, "Input",ExpressionUUID->"d11a8249-e100-444f-b78c-9f4e9d69f0e8"],
Cell[42741, 837, 161788, 2984, 1142, "Output",ExpressionUUID->"1e85abd2-f317-4eda-8013-342c62e1741e"]
}, Open  ]],
Cell[204544, 3824, 7897, 202, 386, "Input",ExpressionUUID->"7b771b9f-6e58-4dd3-8490-fe9a6cf4e0bb"],
Cell[212444, 4028, 1410, 26, 60, "Input",ExpressionUUID->"4cb70e2f-6ec9-4eb0-8dc5-460cd3675046"],
Cell[213857, 4056, 1008, 19, 26, "Input",ExpressionUUID->"0d4e7d77-0bf5-4190-8938-30c6a852e16a"],
Cell[CellGroupData[{
Cell[214890, 4079, 1768, 48, 95, "Input",ExpressionUUID->"7569f895-9eb1-4ce2-aa95-b723dc72f1da"],
Cell[216661, 4129, 33410, 650, 537, "Output",ExpressionUUID->"39032b3e-c7ae-467a-af4d-840253f7a01d"]
}, Open  ]]
}
]
*)

